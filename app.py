
import streamlit as st
import pandas as pd
import plotly.express as px
import folium
from streamlit_folium import folium_static
import geopandas as gpd
import os

# Configura칞칚o da p치gina
st.set_page_config(
    page_title="An치lise da Forma칞칚o T칠cnica em Enfermagem",
    page_icon="游낀",
    layout="wide"
)

# Fun칞칚o para carregar dados com tratamento de erros
@st.cache_data
def load_data():
    try:
        dados_raciais = pd.read_csv('data/CassificacaoRacialRendaSexo.csv', encoding='utf-8')
        dados_cargos = pd.read_csv('data/CargosCarreira.csv', encoding='utf-8')
        dados_evasao = pd.read_csv('data/TaxaEvasao.csv', encoding='utf-8')
        dados_rap = pd.read_csv('data/RelacaoAlunoProfessorRAP.csv', encoding='utf-8')
        dados_orcamento = pd.read_csv('data/PanoramaOrcamentario.csv', encoding='utf-8')
        return dados_raciais, dados_cargos, dados_evasao, dados_rap, dados_orcamento
    except FileNotFoundError as e:
        st.error(f"Erro ao carregar arquivo: {str(e)}")
        return None, None, None, None, None
    except pd.errors.EmptyDataError:
        st.error("Um ou mais arquivos CSV est칚o vazios")
        return None, None, None, None, None
    except Exception as e:
        st.error(f"Erro inesperado: {str(e)}")
        return None, None, None, None, None

# Carregando dados
dados = load_data()

# Verificar se os dados foram carregados corretamente
if all(x is not None for x in dados):
    dados_raciais, dados_cargos, dados_evasao, dados_rap, dados_orcamento = dados
else:
    st.error("N칚o foi poss칤vel carregar todos os dados necess치rios")
    st.stop()

# Sidebar
st.sidebar.title("Navega칞칚o")
pagina = st.sidebar.radio(
    "Selecione uma p치gina:",
    ["Vis칚o Geral", "Distribui칞칚o Geogr치fica", "Perfil Sociodemogr치fico", "Indicadores Educacionais", "An치lise Or칞ament치ria"]
)

# T칤tulo principal
st.title("An치lise da Forma칞칚o T칠cnica em Enfermagem nas Universidades Federais")

# P치ginas
if pagina == "Vis칚o Geral":
    st.header("Vis칚o Geral")
    
    col1, col2 = st.columns(2)
    
    with col1:
        # Total de institui칞칫es
        total_inst = dados_raciais['Instituicao'].nunique()
        st.metric("Total de Institui칞칫es", total_inst)
        
        # Gr치fico de matr칤culas por regi칚o
        try:
            dados_matriculas = dados_raciais.groupby('Regi칚o')['N칰mero de Matr칤culas'].sum().reset_index()
            fig_matriculas = px.bar(
                dados_matriculas,
                x='Regi칚o',
                y='N칰mero de Matr칤culas',
                title='Matr칤culas por Regi칚o'
            )
            st.plotly_chart(fig_matriculas)
        except Exception as e:
            st.error(f"Erro ao gerar gr치fico de matr칤culas: {str(e)}")
    
    with col2:
        # Total de matr칤culas
        total_matriculas = dados_raciais['N칰mero de Matr칤culas'].sum()
        st.metric("Total de Matr칤culas", f"{total_matriculas:,.0f}")
        
        # Gr치fico de evas칚o
        try:
            dados_evasao_media = dados_evasao.groupby('Ano')['Taxa de Evas칚o'].mean().reset_index()
            fig_evasao = px.line(
                dados_evasao_media,
                x='Ano',
                y='Taxa de Evas칚o',
                title='Evolu칞칚o da Taxa de Evas칚o'
            )
            st.plotly_chart(fig_evasao)
        except Exception as e:
            st.error(f"Erro ao gerar gr치fico de evas칚o: {str(e)}")

elif pagina == "Distribui칞칚o Geogr치fica":
    st.header("Distribui칞칚o Geogr치fica")
    
    try:
        # Mapa de distribui칞칚o
        dados_mapa = dados_raciais.groupby(['UF', 'Estado'])['N칰mero de Matr칤culas'].sum().reset_index()
        
        # Criar mapa base
        m = folium.Map(location=[-15.7801, -47.9292], zoom_start=4)
        
        # Adicionar marcadores para cada estado
        for idx, row in dados_mapa.iterrows():
            folium.Circle(
                location=[0, 0],  # Voc칡 precisar치 adicionar as coordenadas corretas
                popup=f"{row['Estado']}: {row['N칰mero de Matr칤culas']} matr칤culas",
                radius=float(row['N칰mero de Matr칤culas'])/10,
                color='red',
                fill=True
            ).add_to(m)
        
        folium_static(m)
    except Exception as e:
        st.error(f"Erro ao gerar mapa: {str(e)}")

elif pagina == "Perfil Sociodemogr치fico":
    st.header("Perfil Sociodemogr치fico")
    
    col1, col2 = st.columns(2)
    
    with col1:
        try:
            # Distribui칞칚o por ra칞a/cor
            dados_raca = dados_raciais.groupby('CorRaca')['N칰mero de Matr칤culas'].sum().reset_index()
            fig_raca = px.pie(
                dados_raca,
                values='N칰mero de Matr칤culas',
                names='CorRaca',
                title='Distribui칞칚o por Ra칞a/Cor'
            )
            st.plotly_chart(fig_raca)
        except Exception as e:
            st.error(f"Erro ao gerar gr치fico de ra칞a/cor: {str(e)}")
    
    with col2:
        try:
            # Distribui칞칚o por renda
            dados_renda = dados_raciais.groupby('RendaFamiliar')['N칰mero de Matr칤culas'].sum().reset_index()
            fig_renda = px.pie(
                dados_renda,
                values='N칰mero de Matr칤culas',
                names='RendaFamiliar',
                title='Distribui칞칚o por Renda Familiar'
            )
            st.plotly_chart(fig_renda)
        except Exception as e:
            st.error(f"Erro ao gerar gr치fico de renda: {str(e)}")

elif pagina == "Indicadores Educacionais":
    st.header("Indicadores Educacionais")
    
    try:
        # Rela칞칚o aluno-professor
        fig_rap = px.line(
            dados_rap,
            x='Ano',
            y='RAP',
            title='Rela칞칚o Aluno-Professor ao Longo do Tempo'
        )
        st.plotly_chart(fig_rap)
    except Exception as e:
        st.error(f"Erro ao gerar gr치fico de rela칞칚o aluno-professor: {str(e)}")
    
    try:
        # Taxa de evas칚o por regi칚o
        fig_evasao_regiao = px.box(
            dados_evasao,
            x='Regi칚o',
            y='Taxa de Evas칚o',
            title='Taxa de Evas칚o por Regi칚o'
        )
        st.plotly_chart(fig_evasao_regiao)
    except Exception as e:
        st.error(f"Erro ao gerar gr치fico de evas칚o por regi칚o: {str(e)}")

elif pagina == "An치lise Or칞ament치ria":
    st.header("An치lise Or칞ament치ria")
    
    try:
        # Evolu칞칚o or칞ament치ria
        fig_orcamento = px.line(
            dados_orcamento,
            x='Ano',
            y='Or칞amento',
            title='Evolu칞칚o do Or칞amento ao Longo do Tempo'
        )
        st.plotly_chart(fig_orcamento)
    except Exception as e:
        st.error(f"Erro ao gerar gr치fico de evolu칞칚o or칞ament치ria: {str(e)}")
    
    try:
        # Distribui칞칚o do or칞amento por regi칚o
        dados_orcamento_regiao = dados_orcamento.groupby('Regi칚o')['Or칞amento'].sum().reset_index()
        fig_orcamento_regiao = px.bar(
            dados_orcamento_regiao,
            x='Regi칚o',
            y='Or칞amento',
            title='Distribui칞칚o do Or칞amento por Regi칚o'
        )
        st.plotly_chart(fig_orcamento_regiao)
    except Exception as e:
        st.error(f"Erro ao gerar gr치fico de or칞amento por regi칚o: {str(e)}")


import streamlit as st
import pandas as pd
import plotly.express as px
import folium
from streamlit_folium import folium_static
import geopandas as gpd

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="An√°lise da Forma√ß√£o T√©cnica em Enfermagem",
    page_icon="üè•",
    layout="wide"
)

# Fun√ß√£o para carregar dados
@st.cache_data
def load_data():
    dados_raciais = pd.read_csv('CassificacaoRacialRendaSexo.csv')
    dados_cargos = pd.read_csv('CargosCarreira.csv')
    dados_evasao = pd.read_csv('TaxaEvasao.csv')
    dados_rap = pd.read_csv('RelacaoAlunoProfessorRAP.csv')
    dados_orcamento = pd.read_csv('PanoramaOrcamentario.csv')
    return dados_raciais, dados_cargos, dados_evasao, dados_rap, dados_orcamento

# Carregando dados
dados_raciais, dados_cargos, dados_evasao, dados_rap, dados_orcamento = load_data()

# Sidebar
st.sidebar.title("Navega√ß√£o")
pagina = st.sidebar.radio(
    "Selecione uma p√°gina:",
    ["Vis√£o Geral", "Distribui√ß√£o Geogr√°fica", "Perfil Sociodemogr√°fico", "Indicadores Educacionais", "An√°lise Or√ßament√°ria"]
)

# T√≠tulo principal
st.title("An√°lise da Forma√ß√£o T√©cnica em Enfermagem nas Universidades Federais")

# P√°ginas
if pagina == "Vis√£o Geral":
    st.header("Vis√£o Geral")
    
    col1, col2 = st.columns(2)
    
    with col1:
        # Total de institui√ß√µes
        total_inst = dados_raciais['Instituicao'].nunique()
        st.metric("Total de Institui√ß√µes", total_inst)
        
        # Gr√°fico de matr√≠culas por regi√£o
        fig_matriculas = px.bar(
            dados_raciais.groupby('Regi√£o')['N√∫mero de Matr√≠culas'].sum().reset_index(),
            x='Regi√£o',
            y='N√∫mero de Matr√≠culas',
            title='Matr√≠culas por Regi√£o'
        )
        st.plotly_chart(fig_matriculas)
    
    with col2:
        # Total de matr√≠culas
        total_matriculas = dados_raciais['N√∫mero de Matr√≠culas'].sum()
        st.metric("Total de Matr√≠culas", f"{total_matriculas:,.0f}")
        
        # Gr√°fico de evas√£o
        fig_evasao = px.line(
            dados_evasao.groupby('Ano')['Taxa de Evas√£o'].mean().reset_index(),
            x='Ano',
            y='Taxa de Evas√£o',
            title='Evolu√ß√£o da Taxa de Evas√£o'
        )
        st.plotly_chart(fig_evasao)

elif pagina == "Distribui√ß√£o Geogr√°fica":
    st.header("Distribui√ß√£o Geogr√°fica")
    
    # Mapa de distribui√ß√£o
    dados_mapa = dados_raciais.groupby(['UF', 'Estado'])['N√∫mero de Matr√≠culas'].sum().reset_index()
    
    # Criar mapa base
    m = folium.Map(location=[-15.7801, -47.9292], zoom_start=4)
    
    # Adicionar marcadores para cada estado
    for idx, row in dados_mapa.iterrows():
        folium.Circle(
            location=[0, 0],  # Voc√™ precisar√° adicionar as coordenadas corretas
            popup=f"{row['Estado']}: {row['N√∫mero de Matr√≠culas']} matr√≠culas",
            radius=float(row['N√∫mero de Matr√≠culas'])/10,
            color='red',
            fill=True
        ).add_to(m)
    
    folium_static(m)

elif pagina == "Perfil Sociodemogr√°fico":
    st.header("Perfil Sociodemogr√°fico")
    
    col1, col2 = st.columns(2)
    
    with col1:
        # Distribui√ß√£o por ra√ßa/cor
        fig_raca = px.pie(
            dados_raciais.groupby('CorRaca')['N√∫mero de Matr√≠culas'].sum().reset_index(),
            values='N√∫mero de Matr√≠culas',
            names='CorRaca',
            title='Distribui√ß√£o por Ra√ßa/Cor'
        )
        st.plotly_chart(fig_raca)
    
    with col2:
        # Distribui√ß√£o por renda
        fig_renda = px.pie(
            dados_raciais.groupby('RendaFamiliar')['N√∫mero de Matr√≠culas'].sum().reset_index(),
            values='N√∫mero de Matr√≠culas',
            names='RendaFamiliar',
            title='Distribui√ß√£o por Renda Familiar'
        )
        st.plotly_chart(fig_renda)

elif pagina == "Indicadores Educacionais":
    st.header("Indicadores Educacionais")
    
    # Rela√ß√£o aluno-professor
    fig_rap = px.line(
        dados_rap,
        x='Ano',
        y='RAP',
        title='Rela√ß√£o Aluno-Professor ao Longo do Tempo'
    )
    st.plotly_chart(fig_rap)
    
    # Taxa de evas√£o por regi√£o
    fig_evasao_regiao = px.box(
        dados_evasao,
        x='Regi√£o',
        y='Taxa de Evas√£o',
        title='Taxa de Evas√£o por Regi√£o'
    )
    st.plotly_chart(fig_evasao_regiao)

elif pagina == "An√°lise Or√ßament√°ria":
    st.header("An√°lise Or√ßament√°ria")
    
    # Evolu√ß√£o or√ßament√°ria
    fig_orcamento = px.line(
        dados_orcamento,
        x='Ano',
        y='Or√ßamento',
        title='Evolu√ß√£o do Or√ßamento ao Longo do Tempo'
    )
    st.plotly_chart(fig_orcamento)
    
    # Distribui√ß√£o do or√ßamento por regi√£o
    fig_orcamento_regiao = px.bar(
        dados_orcamento.groupby('Regi√£o')['Or√ßamento'].sum().reset_index(),
        x='Regi√£o',
        y='Or√ßamento',
        title='Distribui√ß√£o do Or√ßamento por Regi√£o'
    )
    st.plotly_chart(fig_orcamento_regiao)
